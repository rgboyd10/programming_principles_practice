1. What is meant by the term prompt ?
   To request the user to input data.

2. Which operator do you use to read into a variable?
    >>

3. If you want the user to input an integer value into your program for a variable named number , what are two lines of code you could write to ask the user to do it and to input the value into your program?
cout << "Please input an integer followed by 'enter'";
cin >> number;

4. What is \n called and what purpose does it serve?
It is the escape character for a new line.  It inserts a new line into the program.

5. What terminates input into a string?
EOF (CTRL-D) 

6. What terminates input into an integer?
EOF (CTRL-D)

7. How would you write cout << "Hello, "; cout << first_name; cout << "!\n"; as a single line of code?
cout << "Hello, " << first_name << "!\n";

8. What is an object?
An object is some memory that holds a value of a given type.

9. What is a literal?
A sequence of characters from the source character set encloded in double quotes.

10. What kinds of literals are there?
String and character and I'm sure more that I haven't learned about.

11. What is a variable?
A variable is a named object.

12. What are typical sizes for a char , an int , and a double ?
char - 1 byte
int - 4 bytes
double - 8 bytes

13. What measures do we use for the size of small entities in memory, such as int s and string s?
bytes

14. What is the difference between = and == ?
= is an assignment operator used when assigning a value to a variable and == is used with comparing two variables.

15. What is a definition?
A definition is a declaration that sets aside memory for an object.

16. What is an initialization and how does it differ from an assignment?
Initialization of a variable is when you declare the variable.  Assignment is when you give the variable a value.

17. What is string concatenation and how do you make it work in C++?
A string concatenation is when you join two strings together and an example would be:
string a = "This is string a";
string b = ", and this is string b.";
string c = a + b;
cout << c; 

18. Which of the following are legal names in C++? If a name is not legal, why not?

 This_little_pig - legal
 This_1_is fine - not legal because of the space
 2_For_1_special - legal 
 latest thing - not legal because of the space
 the_$12_method - legal
 _this_is_ok - legal
 MiniMineMine - legal
 number - legal
 correct? - legal

19. Give five examples of legal names that you shouldnâ€™t use because they are likely to cause confusion.
string
x1
ThisisareallylongnameImightsay
one
wHy

20. What are some good rules for choosing names?
Don't use overly long names.
Use underscores to separate words in an identifier.
Don't use all capital letters.
Avoid names that are easy to mistype, misread, or confuse.

21. What is type safety and why is it important?
When objects are used according to the rules of it's type.

22. Why can conversion from double to int be a bad thing?
When you are converting a double that is too large to fit into an int.

23. Define a rule to help decide if a conversion from one type to another is safe of unsafe?
Run the program with a variety of inputs, large, small, negative, non-integers.

